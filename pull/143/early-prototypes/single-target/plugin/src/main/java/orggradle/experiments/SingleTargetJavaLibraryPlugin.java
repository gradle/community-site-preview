/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package orggradle.experiments;

import org.gradle.api.*;
import org.gradle.api.internal.plugins.DslObject;
import org.gradle.api.plugins.JavaPluginExtension;
import org.gradle.api.tasks.compile.JavaCompile;

/**
 *
 */
public class SingleTargetJavaLibraryPlugin implements Plugin<Project> {

    public void apply(Project project) {
        project.getPluginManager().apply("java-library");

        var javaLibrary = project.getExtensions().create("javaLibrary", JavaLibrary.class);

        project.getConfigurations().getByName("api").getDependencies().addAllLater(javaLibrary.getDependencies().getApi().getDependencies());
        project.getConfigurations().getByName("compileOnly").getDependencies().addAllLater(javaLibrary.getDependencies().getCompileOnly().getDependencies());
        project.getConfigurations().getByName("compileOnlyApi").getDependencies().addAllLater(javaLibrary.getDependencies().getCompileOnlyApi().getDependencies());
        project.getConfigurations().getByName("implementation").getDependencies().addAllLater(javaLibrary.getDependencies().getImplementation().getDependencies());
        project.getConfigurations().getByName("runtimeOnly").getDependencies().addAllLater(javaLibrary.getDependencies().getRuntimeOnly().getDependencies());

        javaLibrary.getDebug().convention(false);

        var javaSourceSetDirectory = javaLibrary.getSources().create("java");
        // javaSourceSetDirectory.srcDir("src/main/java");

        var java = project.getExtensions().getByType(JavaPluginExtension.class);
        var mainSourceSet = java.getSourceSets().getByName("main");
        mainSourceSet.getJava().srcDirs(javaSourceSetDirectory.getSrcDirs());

        project.getTasks().named(mainSourceSet.getCompileJavaTaskName(), JavaCompile.class, task -> {
            new DslObject(task.getOptions()).getConventionMapping().map("debug", () -> javaLibrary.getDebug().get());
        });
        project.getTasks().register("printModel", PrintModel.class);
    }
    /*

javaLibrary {
    sources {
        protbuf {
            srcDir "src/main/proto"
        }
        java {
            srcDir "src/main/java"
            // srcDir tasks.protobuf
            generated sources?

            file encoding
            file extensions?
            include/exclude (filters)

            outputDir?
            compilation options?
        }

        resources {
            srcDir

            expand
            ant file filter
            include/exclude (filters)

            outputDir?
        }
    }

    dependencies {
        implementation("guava")
    }

    target {
        withSources()
        withJavadoc()

        compilations {

        }
    }

    debug = true
}
     */
}
